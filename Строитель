class Engine:
    def __init__(self, horsepower):
        self.horsepower = horsepower

class Transmission:
    def __init__(self, type):
        self.type = type

class Body:
    def __init__(self, color):
        self.color = color

class CarBuilder:
    def __init__(self):
        self.engine = None
        self.transmission = None
        self.body = None

    def set_engine(self, horsepower):
        self.engine = Engine(horsepower)

    def set_transmission(self, type):
        self.transmission = Transmission(type)

    def set_body(self, color):
        self.body = Body(color)

    def get_car(self):
        return Car(self.engine, self.transmission, self.body)

class CarDirector:
    def __init__(self, builder):
        self.builder = builder

    def construct_car(self):
        self.builder.set_engine(200) 
        self.builder.set_transmission('Automatic')
        self.builder.set_body('Blue')
        return self.builder.get_car()

class Car:
    def __init__(self, engine, transmission, body):
        self.engine = engine
        self.transmission = transmission
        self.body = body

    def __str__(self):
        return f'Car with {self.engine.horsepower}HP engine, {self.transmission.type} transmission and {self.body.color} body.'

class SedanBuilder(CarBuilder):
    def __init__(self):
        super().__init__()

class SUVBuilder(CarBuilder):
    def __init__(self):
        super().__init__()

class SportsCarBuilder(CarBuilder):
    def __init__(self):
        super().__init__()

sedan_builder = SedanBuilder()
director = CarDirector(sedan_builder)
sedan = director.construct_car()
print("Создан седан:", sedan)
